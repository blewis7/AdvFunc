const filterOutOdds = () => {
    const nums = [...arguments];
    return nums.filter(num => num % 2 === 0);
}

const findMin = (...arr) => Math.min(...arr);

const mergeObjects = (arg1, arg2) => {...arg1, ...arg2};

const doubleAndReturnArgs = (arr, ...nums) => [...arr, ...nums.map(num => num * 2)];

Slice and Dice!

const removeRandom = (items) => {
    let index = Math.floor(Math.random() * items.length);
    return [...items.splice(index, 1)];
}

const extend = (array1, array2) => [...array1, ...array2];

const addKeyVal = (obj, key, val) => {
    return {...obj, [key]: 'val'};
}

const removeKey = (obj, key) => {
    let newObj = {...obj};
    delete newObj[key];
    return newObj;
}

const combine = (obj1, obj2) => {
    let newObj = {...obj1, ...obj2};
    return newObj;
}

const update = (obj, key, val) => {
    let newObj = {...obj};
    newObj[key] = val;
    return newObj;
}